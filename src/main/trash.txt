


////  AppointmentController.java:




    @PostMapping("/saveAppointmentBarber")
    public String saveAppointmentBarber(@RequestParam("barberId") int barberId,
                                        @RequestParam("firstName") String firstName,
                                        @RequestParam("lastName") String lastName,
                                     @RequestParam(value = "appointmentIds", required = false) String[] appointmentIdsStr) {
        Barber barber = barberRepository.getById(barberId);
        if (appointmentIdsStr != null && appointmentIdsStr.length > 0) {
            List<Integer> appointmentIds = Arrays.stream(appointmentIdsStr)
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
            barber.getAppointments().clear();
            barberRepository.saveOrUpdate(barber);
            for (Integer appId : appointmentIds) {
                Appointment appointment = appointmentRepository.getById(appId);
                barber.addAppointment(appointment);
            }
            barberRepository.saveOrUpdate(barber);
        } else {
            barber.getAppointments().clear();
            barberRepository.saveOrUpdate(barber);
        }
        return "redirect:/";
    }


    @PostMapping("/saveAppointmentClient")
    public String saveAppointmentClient(@RequestParam("clientId") int clientId,
                                        @RequestParam("firstName") String firstName,
                                        @RequestParam("lastName") String lastName,
                                        @RequestParam(value = "appointmentIds", required = false) String[] appointmentIdsStr) {
        Client client = clientRepository.getById(clientId);
        if (appointmentIdsStr != null && appointmentIdsStr.length > 0) {
            List<Integer> appointmentIds = Arrays.stream(appointmentIdsStr)
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
            client.getAppointments().clear();
            clientRepository.saveOrUpdate(client);
            for (Integer appId : appointmentIds) {
                Appointment appointment = appointmentRepository.getById(appId);
                client.addAppointment(appointment);
            }
            clientRepository.saveOrUpdate(client);
        } else {
            client.getAppointments().clear();
            clientRepository.saveOrUpdate(client);
        }
        return "redirect:/";
    }


    @RequestMapping("/editAppointmentBarber")
    public String editAppointmentBarber(@RequestParam("barberId") int barberId,
                                        @RequestParam("firstName") String firstName,
                                        @RequestParam("lastName") String lastName,
                                        @RequestParam("appointmentId") int appointmentId,
                                        Model model) {
        Barber barber = barberRepository.getById(barberId);
        List<Appointment> allAppointments = appointmentRepository.getAll();
        List<Barber> allBarbers = barberRepository.getAll();
        model.addAttribute("barberId", barberId);
        model.addAttribute("firstName", firstName);
        model.addAttribute("lastName", lastName);
        model.addAttribute("barberAppointments", barber.getAppointments());
        model.addAttribute("allAppointments", allAppointments);
        model.addAttribute("allBarbers", allBarbers);
        model.addAttribute("appointmentId", appointmentId);
        return "edit-appointment-barber-form";
    }

    @RequestMapping("/editAppointmentClient")
    public String editAppointmentClient(@RequestParam("clientId") int clientId,
                                        @RequestParam("firstName") String firstName,
                                        @RequestParam("lastName") String lastName,
                                        @RequestParam("appointmentId") int appointmentId,
                                        Model model) {
        Client client = clientRepository.getById(clientId);
        List<Appointment> allAppointments = appointmentRepository.getAll();
        List<Client> allClients = clientRepository.getAll();
        model.addAttribute("clientId", clientId);
        model.addAttribute("firstName", firstName);
        model.addAttribute("lastName", lastName);
        model.addAttribute("appointmentId", appointmentId);
        model.addAttribute("clientAppointments", client.getAppointments());
        model.addAttribute("allAppointments", allAppointments);
        model.addAttribute("allClients", allClients);
        return "edit-appointment-client-form";
    }






edit-appointment-barber-form.jsp:
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
    <title>APPOINTMENT FORM</title>
    <style>
    </style>
</head>
<body>
<h1>Edit Appointment Barber</h1>

<p>Editing barber for appointment:</p>
<p>Barber Last Name: ${lastName}</p>
<p>Barber First Name: ${firstName}</p>

<form action="saveAppointmentBarber" method="post">
    <input type="hidden" name="appointmentId" value="${appointmentId != null ? appointmentId : ''}">
    <input type="hidden" name="barberId" value="${barberId != null ? barberId : ''}">
    <input type="hidden" name="firstName" value="${firstName != null ? firstName : ''}">
    <input type="hidden" name="lastName" value="${lastName != null ? lastName : ''}">
    <table>
        <tr>
            <th>Barber Last Name</th>
            <th>Barber First Name</th>
            <th>Select</th>
        </tr>
        <c:forEach var="barber" items="${allBarbers}">
            <tr>
                <td>${barber.lastName}</td>
                <td>${barber.firstName}</td>
                <td>
                    <input type="radio" name="barberId" value="${barber.id}"
                           <c:if test="${barber.id == barberId}">checked</c:if>>
                </td>
            </tr>
        </c:forEach>
    </table>
    <input type="submit" value="Save">
</form>
</body>
</html>













edit-appointment-client-form.jsp:
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
    <title>APPOINTMENT FORM</title>
    <style>
    </style>
</head>
<body>
<h1>Edit Appointment Client</h1>

<p>Editing Client for appointment:</p>
<p>Client Last Name: ${lastName}</p>
<p>Client First Name: ${firstName}</p>

<form action="saveAppointmentClient" method="post">
    <input type="hidden" name="appointmentId" value="${appointmentId != null ? appointmentId : ''}">
    <input type="hidden" name="clientId" value="${clientId != null ? clientId : ''}">
    <input type="hidden" name="firstName" value="${firstName != null ? firstName : ''}">
    <input type="hidden" name="lastName" value="${lastName != null ? lastName : ''}">
    <table>
        <tr>
            <th>Client Last Name</th>
            <th>Client First Name</th>
            <th>Select</th>
        </tr>
        <c:forEach var="client" items="${allClients}">
            <tr>
                <td>${client.lastName}</td>
                <td>${client.firstName}</td>
                <td>
                    <input type="radio" name="clientId" value="${client.id}"
                           <c:if test="${client.id == client.id}">checked</c:if>>
                </td>
            </tr>
        </c:forEach>
    </table>
    <input type="submit" value="Save">
</form>
</body>
</html>










